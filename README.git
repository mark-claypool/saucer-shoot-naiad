GIT README
initial text from git "cheat sheets"
see also: http://rogerdudler.github.io/git-guide/
          http://rogerdudler.github.io/git-guide/files/git_cheat_sheet.pdf

QUICK BASICS
  git clone [url]
  (do some work)
  git add *
  git commit -a
  git commit -a -m "message"
  git status
  git push origin master

SETUP & INIT
Configuring user information, initializing and cloning repositories

initialize an existing directory as a Git repository
  git init

retrieve an entire repository from a hosted location via UR
  git clone [url]

quick set of commands to start a directory
  cd myproject
  git init
  git add .
  git commit -m 'initial commit'
  git remote add origin FIX-URL-HERE
  git push origin master


STAGE & SNAPSHOT
Working with snapshots and the Git staging area

add a file as it looks now to your next commit (stage)
  git add [file]

commit your staged content as a new commit snapshot
  git commit -m "[descriptive message]"

Discard all local changes
  git reset --hard HEAD

Discard local changes to file
  git checkout HEAD <file>


REFACTOR FILENAMES
Relocate and remove versioned files

Deletes the file from the working directory and stages the deletion
  git rm [file]

Removes the file from version control but preserves the file locally
  git rm --cached [file]

Changes the file name and prepares it for commit
  git mv [file-original] [file-renamed]


BRANCH & MERGE
Isolating work in branches, changing context, and integrating changes

list your branches. a * will appear next to the currently active branch
  git branch

create a new branch at the current commit
  git branch [branch-name]

switch to another branch and check it out into your working directory
  git checkout

merge the specified branchâ€™s history into the current one
  git merge [branch]



INSPECT & COMPARE
Examining logs, diff s and object information

show the commit history for the currently active branch
  git log 

show the commits on branchA that are not on branchB
  git log branchB..branchA 

show the commits that changed file, even across renames
  git log --follow [file] 

show the diff of what is in branchA that is not in branchB
  git diff branchB...branchA 

show any object in Git in human-readable format
  git show [SHA] 


SHARE & UPDATE
Retrieving updates from another repository and updating local repos

add a git URL as an alias
  git remote add [alias] [url]
  e.g., git remote add origin https://github.com/mark-claypool/bounce.git

fetch down all the branches from that Git remote
  git fetch [alias]

merge a remote branch into your current branch to bring it up to date
  git merge [alias]/[branch]

Transmit local branch commits to the remote repository branch
  git push [alias] [branch]
  e.g., git push -u origin master

fetch and merge any commits from the tracking remote branch
  git pull


TRACKING PATH CHANGES
Versioning file removes and path changes

delete the file from project and stage the removal for commit
  git rm [file]

change an existing file path and stage the move
  git mv [existing-path] [new-path]

show all commit logs with indication of any paths that moved
  git log --stat -M

logging can show a lot
  git log --help
  e.g., git log --graph --oneline --decorate --all


SAVE FRAGMENTS
Shelve and restore incomplete changes

Temporarily stores all modified tracked files
  git stash

Lists all stashed changesets
  git stash list

Restores the most recently stashed files
  git stash pop

Discards the most recently stashed changeset
  git stash drop

